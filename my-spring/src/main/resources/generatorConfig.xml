<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!-- 数据库驱动:选择本地的数据库驱动包 <classPathEntry  location=""/> -->
    <!-- context 是逆向工程的主要配置信息 -->
    <!-- targetRuntime：设置生成的文件适用于那个 mybatis 版本 -->
    <context id="default" targetRuntime="MyBatis3">
        <!-- 生成的 Java 文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8"/>

        <!-- 是否去除自动生成的注释 true：是, false:否 -->
        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!--jdbc的数据库连接, &连接符需要做转义 -->
        <jdbcConnection
                driverClass="com.mysql.jdbc.Driver"
                connectionURL= "jdbc:mysql://192.168.99.100/my_spring?characterEncoding=utf8&amp;useSSL=false"
                userId= "root"
                password= "123456" >
        </jdbcConnection>

        <!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制-->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类 -->
        <!-- targetPackage 指定生成的model生成所在的包名 -->
        <!-- targetProject  指定在该项目下所在的路径 -->
        <javaModelGenerator targetPackage="com.lwk.myspring.mysql.entity" targetProject="src/main/java">
            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="false"/>
            <!-- 是否对model添加 构造函数，如果为true则不会生成ResultMap -->
            <property name="constructorBased" value="false"/>
            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="false"/>
            <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
            <property name="immutable" value="false"/>
        </javaModelGenerator>

        <!--mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码 -->
        <!-- type=ANNOTATEDMAPPER 生成Java Model 和基于注解的Mapper对象 -->
        <!-- type=MIXEDMAPPER 生成基于注解的Java Model 和相应的Mapper对象 -->
        <!-- type=XMLMAPPER 生成SQLMap XML文件和独立的Mapper接口 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.lwk.myspring.mysql.dao" targetProject="src/main/java" >
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackagebaseDaoPaths" value="false" />
            <!-- 为所有生成的接口添加一个父接口 -->
            <property name="rootInterface" value="com.lwk.myspring.mysql.dao.BaseMapper" />
    </javaClientGenerator>

    <!-- 要生成的表(%表示全部), tableName是数据库中的表名或视图名, domainObjectName是实体类名-->
        <table tableName="goods_stock" enableCountByExample="false"  enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false" >
        </table>
    </context>
</generatorConfiguration>
